<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd  
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.1.xsd  
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.1.xsd  
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.1.xsd">


	<context:property-placeholder location="classpath:jdbc.properties"/>

	<bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
	<property name="driverClass" value="${jdbc.driver}"></property>
	<property name="jdbcUrl" value="${jdbc.url}"></property>
	<property name="user" value="${jdbc.username}"></property>
	<property name="password" value="${jdbc.password}"></property>
	</bean>
	

	<!-- 配置业务层 -->
	<bean id="accountService" class="cn.xmqq.spring.demo2.AcountServiceImpl">
	<!-- 注入dao到service -->
	<property name="accountDao" ref="accountDao"></property>
	</bean>
	
	<bean id="accountDao" class="cn.xmqq.spring.demo2.AccountDaoImpl">
		<!-- 注入连接池 -->
		<property name="dataSource" ref="dataSource"></property>
	</bean>

	<!-- 配置事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 注入连接池 ,有了连接池活的连接 进行事务管理-->
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- 配置业务层的代理 ,只能对一个进行事务处理-->
	<bean id="accountServiceProxy" class="org.springframework.transaction.interceptor.TransactionProxyFactoryBean">
	<!-- 目标对象 对accountService进行代理 -->
	<property name="target" ref="accountService" />
	<!-- 注入事务管理器 -->
	<property name="transactionManager" ref="transactionManager" />
	
	<!-- 注入事务的属性  隔离级别  传播行为 -->
	<property name="transactionAttributes">
		<props>
		<!-- prop 格式  key为* 代表所有方法，比如
		<prop key="insert*"></prop>
		
		*PROPAGATION 	事务的传播行为
		*ISOLATION	事务的隔离级别
		*readOnly 只读,也就不能对数据库进行修改操作
		*-Exception 发生那些 异常回滚
		*+Exception 发生那些 异常不回滚
		
		<prop key="transfer">PROPAGATION_REQUIRED,readOnly</prop> 如果对数据库进行修改，会提示数据库只读
		-->
			<prop key="transfer">PROPAGATION_REQUIRED,+java.lang.ArithmeticException</prop>
		</props>
	
	</property>
	
	</bean>
	
</beans>  